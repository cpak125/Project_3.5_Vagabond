{"version":3,"sources":["components/LandingPage.js","components/NavBar.js","components/SinglePost.js","components/NewPostForm.js","components/SingleCity.js","components/EditPostForm.js","App.js","serviceWorker.js","index.js"],"names":["StyledBackground","styled","div","_templateObject","StyledWelcome","_templateObject2","LandingPage","react_default","a","createElement","className","Link","to","Component","Navbar","NavBar_templateObject","LeftBox","NavBar_templateObject2","RightBox","_templateObject3","NavBar","SinglePost","state","city","post","fetchOneCity","_callee","city_id","response","regenerator_default","wrap","_context","prev","next","_this","props","match","params","axios","get","concat","sent","abrupt","data","stop","this","fetchOnePost","_callee2","post_id","_context2","id","handleDelete","_callee4","postId","_context4","swal","title","icon","buttons","dangerMode","then","willDelete","Object","asyncToGenerator","mark","_callee3","_context3","delete","history","push","setState","_this2","name","body","onClick","NewPostForm","newPost","handleChange","event","objectSpread","target","value","handleSubmit","preventDefault","addNewPost","onSubmit","onChange","type","placeholder","CityPicture","img","SingleCity_templateObject","CityName","SingleCity_templateObject2","PostContainer","SingleCity_templateObject3","SingleCity","posts","showNewPostForm","fetchData","cityId","responseCity","responsePost","toggleShowNewPostForm","postContent","map","i","key","src","alt","height","NewPostForm_NewPostForm","reverse","EditPostForm","console","log","App","BrowserRouter","NavBar_NavBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43168a70.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\n\nconst StyledBackground = styled.div`\n  background-image: url('https://i.imgur.com/PMSkWN5.jpg');\n  background-size: cover;\n  background-position: center;\n  \n  .Atlanta {\n    height: 100vh;\n  }\n  \n  a {\n    text-decoration: none;\n  }\n`\nconst StyledWelcome = styled.div`\n  /* display: flex; */\n  /* justify-content: center; */\n  /* align-items: center; */\n  height: 100%;\n  /* img {\n    width: 70vw;\n  } */\n`\n\nexport default class LandingPage extends Component {\n  render() {\n    return (\n      <StyledBackground>\n        <div className=\"Atlanta\">\n          <Link to= 'cities/1'>\n            <StyledWelcome> \n            </StyledWelcome>\n          </Link>\n        </div>\n      </StyledBackground>\n    )\n  }\n}","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Navbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  /* font: 56px 'Damion', cursive; */\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid black;\n`\nconst LeftBox = styled.div`\n  font: 56px 'Noto Sans', sans-serif;\n  font-weight: bold;\n  font-style: italic;\n  align-self: flex-start;\n  padding-left: 20px;\n`\nconst RightBox = styled.div`\n  font: 32px 'Noto Sans', sans-serif;\n  align-self: flex-end;\n  padding-right: 20px;\n`\n\n\nexport default class NavBar extends Component {\n  render() {\n    return (\n      <Navbar>\n        <LeftBox>Vagabond</LeftBox>\n        <RightBox>Sign In</RightBox>\n      </Navbar>\n    )\n  }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport swal from 'sweetalert'\nimport {Link} from 'react-router-dom'\n\n\nexport default class SinglePost extends Component {\n    state = {\n        city: {},\n        post: {}\n    }\n\n    async componentDidMount() {\n        const city_id = this.props.match.params.city_id\n\n        const city = await this.fetchOneCity(city_id)\n        const post = await this.fetchOnePost(city_id)\n\n        this.setState({ city, post })\n    }\n\n    fetchOneCity = async () => {\n        const city_id = this.props.match.params.city_id\n        const response = await axios.get(`/api/cities/${city_id}`)\n        return response.data\n        \n    }\n\n    fetchOnePost = async () => {\n        const city_id = this.props.match.params.city_id\n        const post_id = this.props.match.params.id\n\n        const response = await axios.get(`/api/cities/${city_id}/posts/${post_id}`)\n        return response.data\n    }\n\n    handleDelete = async (postId) => {\n            swal({\n              title: `Are You Sure You want to Delete ${this.state.post.title} ?`,\n              icon: \"warning\",\n              buttons: true,\n              dangerMode: true,\n            })\n              .then((willDelete) => {\n                if (willDelete) {\n                  swal('Success!', { icon: \"success\" })\n                    .then( async () => {\n                        const city_id = this.props.match.params.city_id\n                        await axios.delete(`/api/cities/${city_id}/posts/${postId}`)\n                        this.props.history.push(`/cities/${city_id}`)\n                    })\n                } else {\n                  swal(\"Successfully Cancelled\");\n                }\n              })\n          }\n    \n\n    render() {\n        const city = this.state.city\n        const post = this.state.post\n        return (\n            <div>\n                <h2>{city.name}</h2>\n                <h1>{post.title}</h1>\n                <p>{post.body}</p>\n                <button onClick = {()=> this.handleDelete(post.id)}>Delete</button>\n                <Link to = {`/cities/${city.id}/posts/${post.id}/edit`}>Edit </Link>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class NewPostForm extends Component {\n    state = {\n        newPost: {\n            title: '',\n            body: ''\n        }\n    }\n\n    handleChange = (event) => {\n        const newPost = { ...this.state.newPost }\n        newPost[event.target.name] = event.target.value\n        this.setState({ newPost })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const newPost = { ...this.state.newPost }\n        this.props.addNewPost(newPost)\n        this.setState({\n            newPost: {\n                title: '',\n                body: ''\n            }\n        })\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} >\n                <input onChange={this.handleChange} type=\"text\" name=\"title\" value={this.state.newPost.title} placeholder='Title' />\n                <input onChange={this.handleChange} type=\"text\" name=\"body\" value={this.state.newPost.body} placeholder='Body' />\n                <input className='update' type='submit' value='Add Post' />\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport NewPostForm from './NewPostForm';\nimport styled from 'styled-components'\n\nconst CityPicture = styled.img`\n    width: 100vw;\n`\n\nconst CityName = styled.div`\n    padding-left: 15px;\n    width: 100vw;\n    display: block;\n    justify-content: center;\n    align-items: baseline;\n`\nconst PostContainer = styled.div`\n    width: 100vw;\n    height: 14vh;\n    padding: 30px;\n    overflow: scroll;\n`\n\nexport default class SingleCity extends Component {\n    state = {\n        city: {},\n        posts: [],\n        showNewPostForm: false\n    }\n\n    fetchData = async () => {\n        const cityId = this.props.match.params.id\n        const responseCity = await axios.get(`/api/cities/${cityId}`)\n        const responsePost = await axios.get(`/api/cities/${cityId}/posts`)\n        this.setState({\n            posts: responsePost.data,\n            city: responseCity.data\n        })\n    }\n\n    async componentDidMount() {\n        this.fetchData()    \n    }\n\n    toggleShowNewPostForm = () => {\n        this.setState({ showNewPostForm: !this.state.showNewPostForm })\n    }\n\n    addNewPost = async (newPost) => {\n        const id = this.props.match.params.id\n        await axios.post(`/api/cities/${id}/posts`, newPost)\n        this.fetchData()\n    }\n\n\n    render() {\n        const city = this.state.city\n\n        const postContent = this.state.posts.map((post, i) => {\n            return (\n                <div key={i}>\n                    <h3><Link to={`/cities/${post.city_id}/posts/${post.id}`}>{post.title} </Link></h3>\n                    <p>{post.body}</p>\n                </div>\n            )\n        })\n        return (\n            <div>\n                <div><CityPicture src={city.img} alt={city.name} height={400}/></div>\n                <CityName>\n                    <h1>{city.name}</h1> \n                        <div onClick={this.toggleShowNewPostForm}>Add New Post</div>\n                            {this.state.showNewPostForm ?\n                            <NewPostForm\n                            addNewPost = {this.addNewPost} /> : ''\n                            }\n                </CityName>\n                <PostContainer>\n                        {postContent.reverse()}\n                </PostContainer>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class EditPostForm extends Component {\n    state = {\n        post: {\n            title: '',\n            body: ''\n        }\n    }\n\n    handleChange = (event) => {\n        const post = { ...this.state.post }\n        console.log(event.target.value)\n        post[event.target] = event.target.value\n        this.setState({ post })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.props.handleSubmit}>\n                    <input type='text' name='title'\n                        value={this.state.post.title}\n                        onChange={this.handleChange}\n                    />\n                    <input type='text' name='body'\n                        value={this.state.post.body}\n                        onChange={this.handleChange}\n                    />\n                    {/* <Input type='submit' value='Update User' /> */}\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport LandingPage from './components/LandingPage'\nimport NavBar from './components/NavBar';\nimport SinglePost from './components/SinglePost'\nimport SingleCity from './components/SingleCity';\nimport EditPostForm from './components/EditPostForm';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar/>\n          <Switch>\n            <Route exact path='/' component={LandingPage}/>\n            <Route exact path ='/cities/:id' component={SingleCity} /> \n            <Route exact path ='/cities/:city_id/posts/:id' component={SinglePost} /> \n            <Route exact path = '/cities/:city_id/posts/:id/edit' component= {EditPostForm} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}